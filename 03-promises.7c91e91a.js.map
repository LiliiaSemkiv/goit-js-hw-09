{"mappings":"AAmBA,MAAMA,EAAOC,SAASC,cAAc,SAE9BC,GADSF,SAASC,cAAc,mBACxBD,SAASC,cAAc,mBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAwBtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAEpBM,EAAO,C,SAAEP,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAhCbR,EAAKiB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAEF,MAAMC,EAAaC,SAASlB,EAAMmB,OAC5BC,EAAYF,SAASjB,EAAKkB,OAC1BE,EAAcH,SAAShB,EAAOiB,OAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,CAGxCnB,EAAcmB,EAFQL,GAAcK,EAAI,GAAKF,GAG1CG,MAAK,EAACnB,SAAEA,EAAUS,MAAAW,MACjBC,QAAQC,IAAI,uBAAqBtB,QAAiBoB,MAAU,IAE7DG,OAAM,EAACvB,SAAEA,EAAUS,MAAAe,MAClBH,QAAQC,IAAI,sBAAoBtB,QAAewB,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\nconst form = document.querySelector('.form');\nconst button = document.querySelector('[type=\"submit\"]');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const firstDelay = parseInt(delay.value);\n  const stepValue = parseInt(step.value);\n  const amountValue = parseInt(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    const delayOnSubmit = firstDelay + (i - 1) * stepValue;\n\n    createPromise(i, delayOnSubmit)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","firstDelay","parseInt","value","stepValue","amountValue","i","then","delay1","console","log","catch","delay2"],"version":3,"file":"03-promises.7c91e91a.js.map"}